#!/usr/bin/env bash

# DESCRIPTION:
#   Clone and pushes git projects and their wikis to another repository.
# USAGE:
#   Create and fill "source_project_list.txt" with the projects url list (https or ssh format) and then run:
#   repos_mirror <dest-group-url>

set -euo pipefail
if [[ ${TRACE-0} == "1" ]]; then set -o xtrace; fi

dest_group_url="$1"

if [[ ! -r source_project_list.txt ]]; then
    echo "You need to create the source_project_list.txt file first!" >&2
    exit 1
fi

# Remove if directory exists
clean_directory() {
    if [ -d "${1}" ]; then
        rm -rf "${1}"
    fi
}

mirror_repo() {
    clean_directory "${project_name}.git"

    echo -e "\n[INFO] Cloning $project_name from source repository..."
    # Allow script to continue if missing repo
    git clone --quiet --mirror "$source_project_url" || return 0

    # Remove uneeded and platform specific git objects
    # Allow failure since those objects can be absent
    git -C "$project_name.git" show-ref |
        cut -d ' ' -f2 |
        grep -e 'pull' -e 'merge-requests' -e 'environments' |
        xargs -r -L1 git update-ref -d ||
        true

    git -C "$project_name.git" remote set-url origin "$dest_group_url/$project_name"

    echo "[INFO] Sending $project_name to destiny repository..."
    git -C "$project_name.git" push --set-upstream origin >/dev/null

    clean_directory "${project_name}.git"
}

main() {
    while IFS= read -r source_project_url; do
        # Get project name only, removing ".git" if present
        project_name=$(basename "$source_project_url" .git)

        # On the first iteration, clones base project
        # On the second, clones the wiki
        for type in base wiki; do

            if [[ $type == wiki ]]; then
                project_name="${project_name}.wiki"
                source_project_url="${source_project_url}.wiki"
            fi

            mirror_repo
        done
    done <source_project_list.txt
}

main

exit 0
